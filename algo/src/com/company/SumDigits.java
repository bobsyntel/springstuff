package com.company;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.*;
import java.math.BigInteger;
import java.util.Scanner;

public class SumDigits {
    public static void main(String[] args)throws Exception{
        readFromFile();
//        // create 3 BigInteger objects
//        BigInteger bi1, bi2, bi3;
//
//        // assign values to bi1, bi2
//        bi1 = new BigInteger("123");
//        bi2 = new BigInteger("50");
//
//        // perform add operation on bi1 using bi2
//        bi3 = bi1.add(bi2);
//
//        String str = "Result of addition is " +bi3;;
//
//        // print bi3 value
//        System.out.println( str );
    }

    public static void readFromFile()throws Exception{
//        File file = new File("C:\\Users\\james\\Desktop\\filetobeRead\\text.txt");
//       // BigInteger A;
//        BufferedReader br = new BufferedReader(new FileReader(file));
//        String st;
//       // BigInteger c;
//        BigInteger A = BigInteger.ZERO;
//        while((st = br.readLine()) != null){
//            if(st.equals("")){
//                break;
//            }
//            String ch = st;
//           // System.out.println(st);
//            int length = st.length();
//           // System.out.println("length "+st.length());
//           BigInteger f = new BigInteger(st);
//              A  =   A.add(f);
//            //f = f.
//           // System.out.println(f);
//           // String s = "The sum is "+A;
//            //System.out.println(s);
//        }
//        String s = "The sum is outside  "+A;
//        System.out.println(s);
        BigInteger A = BigInteger.ZERO;
        Scanner sc = new Scanner(StringOfNums());
        int count = 0;
        while(sc.hasNextLine()){
            String line = sc.nextLine();

            System.out.println( line);
            count++;
            BigInteger f = new BigInteger(line);
            A  =   A.add(f);
        }
        sc.close();
        String s = "The sum is "+A;
          System.out.println(s);
        System.out.println(s.length());
    }

    public static String StringOfNums(){
        String st = "51111805572585917449687959500821239112096662561850858945220585879951003619\n" +
                    "7175205238625453602805915166508305738005693610\n" +
                    "80921783439670390511939110236342263540205982583197042907336117193519530913585416\n" +
                    "57659577615\n" +
                    "40182489367529355487386077746753656614615778475667135108696090209129983918913\n" +
                    "54665019560004959145185164568497967328948602101154398289\n" +
                    "007716666419323287215163526034831738477657551746944957052173782476245706517\n" +
                    "4594956305866286941548151\n" +
                    "41955967255473980228576035206434022\n" +
                    "41022496490858268933757745832774275253663039810521864406622570072356362528690729\n" +
                    "492519642762\n" +
                    "13270800153830897600672762180760475774176265971382919239560635716018015231225345\n" +
                    "3923582\n" +
                    "6430385122870951191706158713143405282938239775377\n" +
                    "0\n" +
                    "91496736851026190384509953825531648911368758339909737856482049593296193673162123\n" +
                    "3501329481\n" +
                    "895552232364388669\n" +
                    "042328345007383208962867745888593014574\n" +
                    "16623078727102063021841201390508214356451132836101752447980774001524\n" +
                    "020\n" +
                    "59713375\n" +
                    "74992570742352359850\n" +
                    "74289599203069777858161504525193113514897387482567017775153053961715981920232735\n" +
                    "7419871\n" +
                    "0308242398055139967977\n" +
                    "462\n" +
                    "59166372612643603754057669135532532330019692436353899966692184123456422384052\n" +
                    "717319113723836\n" +
                    "23939143182057708000925031195435495845428879396421194260102130152800730084729026\n" +
                    "7567259745457\n" +
                    "21368859658311914257733691948956610704972441073924340\n" +
                    "4036403429707145616397834328683616596334424\n" +
                    "892987459693102\n" +
                    "98974392398176962094148037672034155814975544627836\n" +
                    "79079639592509931818260760010439837664084431160920784129011520729348871435963085\n" +
                    "4459\n" +
                    "2193907719421370581\n" +
                    "5539809340992178360689520485784505\n" +
                    "41880667437015349342705344562715010480583199951601872518408618050221549559315859\n" +
                    "56603502666\n" +
                    "2950444304199785720158472\n" +
                    "5603793542631096649266256967260060483754311915101141296\n" +
                    "65\n" +
                    "149259\n" +
                    "05079763\n" +
                    "43959683035332\n" +
                    "763198689362\n" +
                    "184540316084965971058304831922268290749624412523802822887511614599702526102775\n" +
                    "0858727861029287189539850668126909908978785568002807088\n" +
                    "16909943000870252758504433668336653997713595537627541089226039108138232493806401\n" +
                    "1096766159973657\n" +
                    "203252625767\n" +
                    "6649870556608497218099546453334039911795166288032597457624195996381\n" +
                    "311758793868572038099032326845028607419321513402\n" +
                    "12362355108\n" +
                    "7741686931403585639739074331\n" +
                    "87734594991655676375383088964430828583259988558030155988025896417680861260806852\n" +
                    "990940775923094\n" +
                    "954373470547\n" +
                    "81720278185935842595952372182424746212990066069372278953181199904062827\n" +
                    "23737620334990629740812377133623112703820765908645421504577217280599\n" +
                    "8789805148604765353638\n" +
                    "46235870501\n" +
                    "9961265929835\n" +
                    "7550653467405080958751196448766685\n" +
                    "003632931903103067765147766521247318083982700762806\n" +
                    "77056894665730503645306151443704\n" +
                    "11759369129466629644175368678204977316716883433844568188295383854342110943574934\n" +
                    "5525\n" +
                    "51\n" +
                    "411230319406136377733911774728394202917377284722131884795495603162408913\n" +
                    "78640432579597\n" +
                    "1739236653081552365170023725180888965828254\n" +
                    "75405343086102540662\n" +
                    "680608\n" +
                    "243757956243991\n" +
                    "64839917406713720162031613025573906093773455044174591849303677640950781886246691\n" +
                    "14676243\n" +
                    "045309831769117010558353001\n" +
                    "6139963936764773604392045612488971755881622\n" +
                    "08194387418982234383679294327787926972636449283\n" +
                    "7325604644800745210012\n" +
                    "44\n" +
                    "230086613199118678\n" +
                    "6694984476315647121959444\n" +
                    "793333666434557910159060638814980029\n" +
                    "8964591545\n" +
                    "3588349338987803391417765634787263497308392799190258889600\n" +
                    "93696386871430862840305278453865020902746354615438153270896736461755360931328132\n" +
                    "2441453\n" +
                    "98825068007874486294898416440565971023884188649488216174970765446237846552436197\n" +
                    "37640\n" +
                    "1057269177\n" +
                    "79619416946194397453453393191793759597413155973290473283856\n" +
                    "102426097182\n" +
                    "4776280916266997795256972178377156697950600616\n" +
                    "3617819182045053537396135629736392560409470773766359615939430626482011861082\n" +
                    "2923601632181161703756263844043733351658309602373108017736594511117629409924\n" +
                    "636874211793084754944083536456601715150325604058786699734529\n" +
                    "5509802106566783811001483043301832964384138364042007104565085613\n" +
                    "63\n" +
                    "0618477870720\n" +
                    "8994000141166\n" +
                    "3182873051982857111\n" +
                    "026368320739264864848317\n" +
                    "6315677202768019411\n" +
                    "602220271944351781963626\n" +
                    "08306450120471316901147018203709039629932780747169180804889162477804814332780738\n" +
                    "88253135427672439\n" +
                    "52936282959765822791326604889048758324899909273784186633867199237644109420739598\n" +
                    "9415830502121771\n" +
                    "01081258349471271598206673598899164316643616304286344684982051063714668300983351\n" +
                    "619230\n" +
                    "99599115840389122159147528743073452162208114947977302311934059538876275506145515\n" +
                    "8207291017510938\n";
                    //"\n";
            return  st;
    }
}
